name: Deploy PNW-MVP

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 🛎️ Checkout repository
        uses: actions/checkout@v3

      - name: 🔑 Set Aleo private key from repository secret
        run: echo "ALEO_PRIVATE_KEY=${{ secrets.ALEO_PRIVATE_KEY }}" >> $GITHUB_ENV

      - name: 🛠️ Install Precompiled Leo CLI (`.zip`)
        run: |
          curl -L -o leo.zip https://github.com/ProvableHQ/leo/releases/download/v2.4.1/leo-mainnet-x86_64-unknown-linux-gnu.zip
          unzip leo.zip -d $HOME/.aleo
          chmod +x $HOME/.aleo/leo
          echo "export PATH=$HOME/.aleo:\$PATH" >> $GITHUB_ENV
          echo "$HOME/.aleo" >> $GITHUB_PATH

      - name: ✅ Verify Leo Installation
        run: |
          export PATH=$HOME/.aleo:$PATH
          leo --version

      - name: 🔥 Running Debug Tests (Using Cheat Codes)
        run: |
          export PATH=$HOME/.aleo:$PATH
          echo "🔍 Running Debugging Test..."
          leo run debug --network testnet "CheatCode::print_mapping(worker_category)"
          leo run debug --network testnet "CheatCode::set_block_height(10000)"

      - name: 🔥 Running Pre-Deployment Build Check (With Debugging)
        run: |
          export PATH=$HOME/.aleo:$PATH
          leo clean
          echo "🔍 Running build... Saving logs."
          if ! leo build --network testnet 2>&1 | tee build_error.log; then
              echo "🔴 Parsing error detected!"
              echo "📝 Showing last 20 lines of build_error.log:"
              tail -n 20 build_error.log
              exit 248
          fi

      - name: 🚀 Deploy PNW-MVP contracts
        run: |
          export PATH=$HOME/.aleo:$PATH
          leo deploy --network testnet --private-key ${ALEO_PRIVATE_KEY}
